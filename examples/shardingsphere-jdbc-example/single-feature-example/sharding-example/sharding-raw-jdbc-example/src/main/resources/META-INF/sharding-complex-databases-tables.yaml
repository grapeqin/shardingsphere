#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# 数据源配置
dataSources:
  ds_0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
    username: root
    password: 123456
  ds_1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
    username: root
    password: 123456

rules:
  - !SHARDING
    # 标准分片模式
    tables:
      # 逻辑表名
      t_my_order:
        # 实际数据节点列表
        actualDataNodes: ds_0.t_my_order_${[0,2]},ds_1.t_my_order_${[1,3]}
        # 分表策略
        tableStrategy:
          # 标准分片模式
          complex:
            # 分片列
            shardingColumns: user_id,order_no
            # 分片算法
            shardingAlgorithmName: table-complex
        # key生成策略
        keyGenerateStrategy:
          # 自动生成id的列名
          column: order_id
          # 自动生成id的算法
          keyGeneratorName: snowflake
    # 默认分库策略
    defaultDatabaseStrategy:
      # 复合分片模式
      complex:
        # 分片列
        shardingColumns: user_id,order_no
        # 分片算法
        shardingAlgorithmName: database-complex
    defaultTableStrategy:
      none:

    #分片算法
    shardingAlgorithms:
      database-complex:
        # 自定义分片算法
        type: COMPLEX_USERID_ORDERNO
        props:
          sharding-count: 2
      table-complex:
        type: COMPLEX_USERID_ORDERNO
        props:
          sharding-count: 4

    #key生成算法
    keyGenerators:
      snowflake:
        type: SNOWFLAKE
props:
  sql-show: true

